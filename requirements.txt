# requirements.txt
Flask==2.3.3
python-docx==0.8.11
Werkzeug==2.3.7

# deployment_guide.md

## Quick Deployment Guide

### 1. Server Setup

#**Create project directory:**
#```bash
mkdir word_document_manager
cd word_document_manager
#```

#**Create virtual environment:**
#```bash
python3 -m venv venv
source venv/bin/activate  # On Windows: venv\Scripts\activate
#```

#**Install dependencies:**
#```bash
pip install Flask python-docx
#```

### 2. File Structure

#Create this exact folder structure:

### 3. Quick Start

**Run the application:**
#```bash
python app.py
#```

**Access the application:**
- Local: http://localhost:5000
- Server: http://your-server-ip:5000

### 4. Key Changes Made

1. **Server-friendly editing**: Primary editing is now web-based
2. **Better error handling**: Detects server environment automatically
3. **Fixed routing**: All routes work properly
4. **Clean templates**: Simplified HTML structure
5. **Desktop fallback**: "Open in Word" tries desktop apps but falls back gracefully

### 5. Features Available

- ✅ **Create documents** via web interface
- ✅ **Upload documents** (.docx, .doc)
- ✅ **Edit in browser** (primary method)
- ✅ **Preview documents** in browser
- ✅ **Download documents**
- ✅ **Delete documents**
- ✅ **Open in Word** (if desktop environment available)

### 6. Production Deployment

#For production, consider using:

**With Gunicorn:**
```bash
pip install gunicorn
gunicorn -w 4 -b 0.0.0.0:5000 app:app
```

**With uWSGI:**
```bash
pip install uwsgi
uwsgi --http 0.0.0.0:5000 --wsgi-file app.py --callable app
```

**Important:** Change the `app.secret_key` in app.py to a secure random string before production deployment.

### 7. Troubleshooting

**Common issues and solutions:**

1. **Import errors**: Make sure all files are in the correct directories
2. **Template errors**: Ensure all HTML files are in the `templates/` folder
3. **Permission errors**: Check that the application can write to the `documents/` folder
4. **Port conflicts**: Change port in `app.run(port=5000)` if needed

### 8. File Permissions

Ensure proper permissions:
```bash
chmod 755 word_document_manager/
chmod 644 app.py
chmod 644 templates/*.html
chmod 755 documents/  # Will be created automatically
```
